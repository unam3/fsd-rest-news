drop table if exists authors cascade;
drop table if exists users cascade;
drop table if exists categories cascade;
drop table if exists tags cascade;
drop table if exists news cascade;
drop table if exists news_tags cascade;
drop table if exists news_comments cascade;

begin;

create table users (
    user_id         integer generated always as identity,
    name            varchar(80) not null,
    surname         varchar(80) not null,
    avatar          text,
    creation_date   timestamp DEFAULT current_timestamp,
    is_admin        boolean not null,

    primary key (user_id)
);

INSERT INTO users (name, surname, avatar, is_admin) VALUES
    ('n', 's', 'http://pluh/meh.jpg', false),
    ('n1', 's1', 'http://pluh/meh.jpg', false);

create table authors (
    user_id         integer primary key references users,
    description     text not null
);

INSERT INTO authors VALUES (2, 'short description');

-- how to create possible parental relations between rows?
create table categories (
    category_id     integer generated always as identity primary key,
    name            varchar(80) not null,
    parent_id       integer references categories
);

INSERT INTO categories (name, parent_id) VALUES
    ('cat', null),
    ('cat1', 1),
    ('cat2', 1),
    ('cat3', 2);

create table tags (
    tag_id          integer generated always as identity primary key,
    tag_name        varchar(80) not null
);

INSERT INTO tags (tag_name) VALUES
    ('tag'),
    ('tag1'),
    ('tag2');

create table news (
    news_id             integer generated always as identity,
    name                varchar(80) not null,
    creation_date       date not null,
    author              integer references authors (user_id),
    category_id         integer references categories,
    text                text not null,
    is_published        boolean not null,
    primary key (news_id)

    --main_photo          photos not null, -- !
    --additional_photos   photos not null -- !
);

--create table news_drafts (
--    news_id         integer references news (news_id)
--);

--create table news_published (
--    news_id         integer references news (news_id)
--);

INSERT INTO news (name, creation_date, author, category_id, text, is_published) VALUES
    ('nn', '2010-12-30', 2, 1, 'txt', true),
    ('nn', '2010-12-30', 2, 2, 'txt', true);

create table news_tags (
    tag_id          integer references tags (tag_id),
    news_id         integer references news (news_id),
    primary key (tag_id, news_id)
);

INSERT INTO news_tags (tag_id, news_id) VALUES
    (1, 1),
    (2, 1),
    (2, 2);

create table news_comments (
    comment_id      integer generated always as identity,
    news_id         integer references news (news_id) not null,
    comment_text    text not null
);

INSERT INTO news_comments (news_id, comment_text) VALUES
    (1, 'kek'),
    (1, 'pluh'),
    (2, 'meh');

commit;

select * from users;
select * from categories;
select * from news;
select * from news_tags;
select * from news_comments;
